{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport * as documentoService from '@/services/documento.service';\nexport default {\n  name: 'VistoriaListComponent',\n  props: {\n    permissao: Object\n  },\n  data: () => ({\n    headers: [{\n      text: 'Placa',\n      value: 'veiculo.placa'\n    }, {\n      text: 'Data da Vistoria',\n      value: 'data'\n    }, {\n      text: 'Parecer',\n      value: 'parecer'\n    }, {\n      text: 'Usuário',\n      value: 'usuario.username'\n    }, {\n      text: 'Ações',\n      value: 'action'\n    }],\n    totalItems: 0,\n    items: [],\n    options: {},\n    filtro: {},\n    itensParecer: [{\n      text: 'Pendente',\n      value: 'pendente'\n    }, {\n      text: 'Aprovado',\n      value: 'aprovado'\n    }, {\n      text: 'Aprovado com Ressalva',\n      value: 'aprovado_com_ressalva'\n    }, {\n      text: 'Reprovado',\n      value: 'reprovada'\n    }]\n  }),\n  watch: {\n    options: {\n      handler() {\n        this.getVistorias();\n      },\n      deep: true\n    }\n  },\n  methods: {\n    async getVistorias() {\n      const {\n        sortBy,\n        sortDesc,\n        page,\n        itemsPerPage\n      } = this.options;\n      const query = {\n        page: page,\n        page_size: itemsPerPage,\n        ordering: `${sortDesc && sortDesc[0] ? '-' : ''}${sortBy}`,\n        expand: 'veiculo,usuario',\n        veiculo__permissao: this.permissao.id\n      };\n      const response = await this.$api.list({\n        resource: this.$endpoints.VISTORIA,\n        query: query\n      });\n      this.items = response.data.results;\n      this.totalItems = response.data.count;\n    },\n    cadastrarVistoria() {\n      this.$router.push('/vistoria/cadastrar');\n    },\n    editarVistoria(id) {\n      this.$router.push(`/vistoria/${id}`);\n    },\n    limparFiltros() {\n      this.filtro = {\n        placa: null,\n        parecer: null\n      };\n      this.getVistorias();\n    },\n    async imprimirParecer(vistoriaId) {\n      let request = documentoService.carregarArquivo({\n        resource: this.$endpoints.VISTORIA_LAUDO,\n        data: {\n          vistoria: vistoriaId,\n          tipo_documento: 'laudo_vistoria'\n        }\n      });\n      request.then(response => {\n        const downloadUrl = window.URL.createObjectURL(response.data);\n        window.open(downloadUrl, '__blank');\n      }).catch(error => {\n        this.handleBlobError(error);\n      });\n    },\n    corParecer(parecer) {\n      const colors = {\n        'aprovado': 'green darken-1',\n        'reprovado': 'red darken-1',\n        'aprovado_com_ressalva': 'orange darken-1'\n      };\n      return colors[parecer] || 'grey darken-1';\n    },\n    labelParecer(parecer) {\n      const labels = {\n        'aprovado': 'Aprovado',\n        'reprovado': 'Reprovado',\n        'aprovado_com_ressalva': 'Aprovado com ressalva'\n      };\n      return labels[parecer] || 'Pendente';\n    }\n  }\n};","map":{"version":3,"names":["documentoService","name","props","permissao","Object","data","headers","text","value","totalItems","items","options","filtro","itensParecer","watch","handler","getVistorias","deep","methods","sortBy","sortDesc","page","itemsPerPage","query","page_size","ordering","expand","veiculo__permissao","id","response","$api","list","resource","$endpoints","VISTORIA","results","count","cadastrarVistoria","$router","push","editarVistoria","limparFiltros","placa","parecer","imprimirParecer","vistoriaId","request","carregarArquivo","VISTORIA_LAUDO","vistoria","tipo_documento","then","downloadUrl","window","URL","createObjectURL","open","catch","error","handleBlobError","corParecer","colors","labelParecer","labels"],"sources":["src/views/vistoria/VistoriaListComponent.vue"],"sourcesContent":["<template>\n  <v-data-table\n    :headers=\"headers\"\n    :items=\"items\"\n    :options.sync=\"options\"\n    :server-items-length=\"totalItems\"\n    :items-per-page=\"10\"\n    :footer-props=\"{\n      'items-per-page-options': [10, 20, 30]\n    }\"\n  >\n    <template #[`item.parecer`]=\"{ item }\">\n      <v-chip\n        :color=\"corParecer(item.parecer)\"\n        dark\n      >\n        {{ labelParecer(item.parecer) }}\n      </v-chip>\n    </template>\n    <template #[`item.action`]=\"{ item }\">\n      <v-toolbar-items>\n        <v-tooltip bottom>\n          <template #activator=\"{ on, attrs }\">\n            <v-btn\n              v-bind=\"attrs\"\n              icon\n              v-on=\"on\"\n              @click=\"imprimirParecer(item.id)\"        \n            >\n              <v-icon class=\"material-icons-outlined\">\n                print\n              </v-icon>\n            </v-btn>\n          </template>\n          <span>Imprimir</span>\n        </v-tooltip>\n      </v-toolbar-items>\n    </template>\n  </v-data-table>\n</template>\n\n<script>\nimport * as documentoService from '@/services/documento.service'\n\nexport default {\n  name: 'VistoriaListComponent',\n  props: {\n    permissao: Object,\n  },\n  data: () => ({\n    headers: [\n      {text: 'Placa', value: 'veiculo.placa'},\n      {text: 'Data da Vistoria', value: 'data'},\n      {text: 'Parecer', value: 'parecer'},\n      {text: 'Usuário', value: 'usuario.username'},\n      {text: 'Ações', value: 'action'},\n    ],\n    totalItems: 0,\n    items: [],\n    options: {},\n    filtro: {},\n    itensParecer: [\n      {text: 'Pendente', value: 'pendente'},\n      {text: 'Aprovado', value: 'aprovado'},\n      {text: 'Aprovado com Ressalva', value: 'aprovado_com_ressalva'},\n      {text: 'Reprovado', value: 'reprovada'},\n    ],\n  }),\n  watch: {\n    options: {\n      handler() {\n        this.getVistorias()\n      },\n      deep: true\n    },\n  },\n  methods: {\n    async getVistorias() {\n      const { sortBy, sortDesc, page, itemsPerPage } = this.options\n      const query = {\n        page: page,\n        page_size: itemsPerPage,\n        ordering: `${sortDesc && sortDesc[0] ? '-':''}${sortBy}`,\n        expand: 'veiculo,usuario',\n        veiculo__permissao: this.permissao.id,\n      }\n      const response = await this.$api.list({\n        resource: this.$endpoints.VISTORIA,\n        query: query\n      })\n      this.items = response.data.results\n      this.totalItems = response.data.count\n    },\n    cadastrarVistoria() {\n      this.$router.push('/vistoria/cadastrar')\n    },\n    editarVistoria(id) {\n      this.$router.push(`/vistoria/${id}`)\n    },\n    limparFiltros() {\n      this.filtro = {\n        placa: null,\n        parecer: null\n      }\n      this.getVistorias()\n    },\n    async imprimirParecer(vistoriaId) {\n      let request = documentoService.carregarArquivo({\n          resource: this.$endpoints.VISTORIA_LAUDO,\n          data: {\n            vistoria: vistoriaId,\n            tipo_documento: 'laudo_vistoria'\n          }\n        })\n        request\n          .then(response => {\n            const downloadUrl = window.URL.createObjectURL(response.data)\n            window.open(downloadUrl, '__blank')\n          })\n          .catch((error) => {\n            this.handleBlobError(error)\n          });\n    },\n    corParecer(parecer) {\n      const colors = {\n        'aprovado': 'green darken-1',\n        'reprovado': 'red darken-1',\n        'aprovado_com_ressalva': 'orange darken-1'\n      };\n\n      return colors[parecer] || 'grey darken-1';\n    },\n    labelParecer(parecer) {\n      const labels = {\n        'aprovado': 'Aprovado',\n        'reprovado': 'Reprovado',\n        'aprovado_com_ressalva': 'Aprovado com ressalva'\n      };\n\n      return labels[parecer] || 'Pendente';\n    }\n  }\n}\n</script>"],"mappings":";;;;AA0CA,YAAAA,gBAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,SAAA,EAAAC;EACA;EACAC,IAAA,EAAAA,CAAA;IACAC,OAAA,GACA;MAAAC,IAAA;MAAAC,KAAA;IAAA,GACA;MAAAD,IAAA;MAAAC,KAAA;IAAA,GACA;MAAAD,IAAA;MAAAC,KAAA;IAAA,GACA;MAAAD,IAAA;MAAAC,KAAA;IAAA,GACA;MAAAD,IAAA;MAAAC,KAAA;IAAA,EACA;IACAC,UAAA;IACAC,KAAA;IACAC,OAAA;IACAC,MAAA;IACAC,YAAA,GACA;MAAAN,IAAA;MAAAC,KAAA;IAAA,GACA;MAAAD,IAAA;MAAAC,KAAA;IAAA,GACA;MAAAD,IAAA;MAAAC,KAAA;IAAA,GACA;MAAAD,IAAA;MAAAC,KAAA;IAAA;EAEA;EACAM,KAAA;IACAH,OAAA;MACAI,QAAA;QACA,KAAAC,YAAA;MACA;MACAC,IAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAF,aAAA;MACA;QAAAG,MAAA;QAAAC,QAAA;QAAAC,IAAA;QAAAC;MAAA,SAAAX,OAAA;MACA,MAAAY,KAAA;QACAF,IAAA,EAAAA,IAAA;QACAG,SAAA,EAAAF,YAAA;QACAG,QAAA,KAAAL,QAAA,IAAAA,QAAA,iBAAAD,MAAA;QACAO,MAAA;QACAC,kBAAA,OAAAxB,SAAA,CAAAyB;MACA;MACA,MAAAC,QAAA,cAAAC,IAAA,CAAAC,IAAA;QACAC,QAAA,OAAAC,UAAA,CAAAC,QAAA;QACAX,KAAA,EAAAA;MACA;MACA,KAAAb,KAAA,GAAAmB,QAAA,CAAAxB,IAAA,CAAA8B,OAAA;MACA,KAAA1B,UAAA,GAAAoB,QAAA,CAAAxB,IAAA,CAAA+B,KAAA;IACA;IACAC,kBAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACAC,eAAAZ,EAAA;MACA,KAAAU,OAAA,CAAAC,IAAA,cAAAX,EAAA;IACA;IACAa,cAAA;MACA,KAAA7B,MAAA;QACA8B,KAAA;QACAC,OAAA;MACA;MACA,KAAA3B,YAAA;IACA;IACA,MAAA4B,gBAAAC,UAAA;MACA,IAAAC,OAAA,GAAA9C,gBAAA,CAAA+C,eAAA;QACAf,QAAA,OAAAC,UAAA,CAAAe,cAAA;QACA3C,IAAA;UACA4C,QAAA,EAAAJ,UAAA;UACAK,cAAA;QACA;MACA;MACAJ,OAAA,CACAK,IAAA,CAAAtB,QAAA;QACA,MAAAuB,WAAA,GAAAC,MAAA,CAAAC,GAAA,CAAAC,eAAA,CAAA1B,QAAA,CAAAxB,IAAA;QACAgD,MAAA,CAAAG,IAAA,CAAAJ,WAAA;MACA,GACAK,KAAA,CAAAC,KAAA;QACA,KAAAC,eAAA,CAAAD,KAAA;MACA;IACA;IACAE,WAAAjB,OAAA;MACA,MAAAkB,MAAA;QACA;QACA;QACA;MACA;MAEA,OAAAA,MAAA,CAAAlB,OAAA;IACA;IACAmB,aAAAnB,OAAA;MACA,MAAAoB,MAAA;QACA;QACA;QACA;MACA;MAEA,OAAAA,MAAA,CAAApB,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}