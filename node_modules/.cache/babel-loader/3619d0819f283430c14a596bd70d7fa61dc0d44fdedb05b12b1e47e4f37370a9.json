{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ConfirmDialog from '@/components/ConfirmDialog.vue';\nexport default {\n  name: \"RequerimentoList\",\n  components: {\n    ConfirmDialog\n  },\n  props: {\n    permissao: Object,\n    disabledButtons: Boolean\n  },\n  data: () => ({\n    headers: [{\n      text: \"Data\",\n      value: \"data\"\n    }, {\n      text: \"Número\",\n      value: \"numero\"\n    }, {\n      text: \"Descrição\",\n      value: \"processo_descricao\",\n      sortable: false\n    }, {\n      text: \"Placa\",\n      value: \"placa\"\n    }, {\n      text: \"Status\",\n      value: \"status\",\n      sortable: false\n    }, {\n      text: \"Documento\",\n      value: \"documento\",\n      sortable: false\n    }, {\n      text: \"Ações\",\n      value: \"action\"\n    }],\n    placa: {},\n    filtro: {\n      placa: null\n    },\n    totalItems: 0,\n    items: [],\n    options: {},\n    filtroAnterior: {\n      placa: null\n    },\n    dialogStatus: false,\n    status: [{\n      text: 'Em andamento',\n      value: 'em_andamento'\n    }, {\n      text: 'Cancelado',\n      value: 'cancelado'\n    }, {\n      text: 'Finalizado',\n      value: 'finalizado'\n    }],\n    requerimento: {},\n    errors: {}\n  }),\n  watch: {\n    options: {\n      handler() {\n        this.getRequerimentos();\n      },\n      deep: true\n    }\n  },\n  methods: {\n    async getRequerimentos() {\n      const {\n        sortBy,\n        sortDesc,\n        page,\n        itemsPerPage\n      } = this.options;\n      let resetPage = false;\n      let ordering = sortBy[0];\n      if (sortDesc[0]) {\n        ordering = `-${ordering}`;\n      }\n      if (this.filtro.placa !== this.filtroAnterior.placa) {\n        resetPage = true;\n        this.options.page = 1;\n        this.filtroAnterior = {\n          ...this.filtro\n        };\n      }\n      ordering = `${sortDesc && sortDesc[0] ? '-' : ''}${sortBy}`;\n      const query = {\n        permissao: this.permissao.id,\n        page: resetPage ? 1 : page,\n        page_size: itemsPerPage,\n        ordering: ordering,\n        expand: 'descricao',\n        placa: this.filtro.placa\n      };\n      const response = await this.$api.list({\n        resource: this.$endpoints.PROCESSO,\n        query: query\n      });\n      console.log(response);\n      this.items = response.data.results;\n      this.totalItems = response.data.count;\n    },\n    baixarArquivo(arquivo) {\n      window.open(arquivo);\n    },\n    editarRequerimento(item) {\n      this.$router.push(`/requerimento/${item.id}`);\n    },\n    async deletarRequerimento(veiculoId) {\n      const res = await this.$refs.confirm.open(\"Confirmar exclusão\", \"Tem certeza que deseja excluir este registro ?\");\n      if (res) {\n        const response = this.$api.destroy({\n          resource: this.$endpoints.PROCESSO,\n          id: veiculoId\n        });\n        response.then(() => this.getRequerimentos()).catch(err => {\n          this.$toast.open({\n            message: err,\n            type: \"error\"\n          });\n        });\n      }\n    },\n    openDialogStatus(requerimento) {\n      this.requerimento = Object.assign({}, requerimento);\n      this.dialogStatus = true;\n    },\n    fecharDialogStatus() {\n      this.dialogStatus = false;\n      this.requerimento = {};\n      this.errors = {};\n    },\n    salvarDialogStatus() {\n      const response = this.$api.update({\n        resource: this.$endpoints.PROCESSO,\n        id: this.requerimento.id,\n        data: {\n          id: this.requerimento.id,\n          status: this.requerimento.status,\n          permissao: this.requerimento.permissao,\n          descricao: this.requerimento.descricao.id,\n          numero: this.requerimento.numero\n        }\n      });\n      response.then(() => {\n        this.$toast.open({\n          message: 'Registro salvo com sucesso',\n          type: 'success'\n        });\n        this.fecharDialogStatus();\n        this.getRequerimentos();\n      }).catch(error => this.errors = this.handleError(error));\n    },\n    formatStatusName(status) {\n      const statusMap = {\n        em_andamento: 'Em andamento',\n        cancelado: 'Cancelado',\n        finalizado: 'Finalizado'\n      };\n      return statusMap[status] || 'Status desconhecido';\n    },\n    limparFiltros() {\n      this.filtro = {\n        placa: null\n      };\n      this.getRequerimentos();\n    },\n    transformToUppercase() {\n      this.filtro.placa = this.filtro.placa.toUpperCase();\n    }\n  }\n};","map":{"version":3,"names":["ConfirmDialog","name","components","props","permissao","Object","disabledButtons","Boolean","data","headers","text","value","sortable","placa","filtro","totalItems","items","options","filtroAnterior","dialogStatus","status","requerimento","errors","watch","handler","getRequerimentos","deep","methods","sortBy","sortDesc","page","itemsPerPage","resetPage","ordering","query","id","page_size","expand","response","$api","list","resource","$endpoints","PROCESSO","console","log","results","count","baixarArquivo","arquivo","window","open","editarRequerimento","item","$router","push","deletarRequerimento","veiculoId","res","$refs","confirm","destroy","then","catch","err","$toast","message","type","openDialogStatus","assign","fecharDialogStatus","salvarDialogStatus","update","descricao","numero","error","handleError","formatStatusName","statusMap","em_andamento","cancelado","finalizado","limparFiltros","transformToUppercase","toUpperCase"],"sources":["src/views/requerimento/RequerimentoList.vue"],"sourcesContent":["<template>\n  <v-card flat>\n    <v-card-text>\n      <div class=\"d-flex align-center\">\n        <div style=\"max-width: 500px\">\n          <v-text-field\n            v-model=\"filtro.placa\"\n            label=\"Placa\"\n            :items=\"placa\"\n            class=\"mr-3\"\n            @input=\"transformToUppercase\"\n          />\n        </div>\n        <v-btn\n          color=\"blue-grey darken-4 mr-3\"\n          dark\n          @click=\"getRequerimentos\"\n        >\n          <v-icon>search</v-icon>\n          Pesquisar\n        </v-btn>\n        <v-btn\n          outlined\n          color=\"blue-grey darken-4\"\n          @click=\"limparFiltros\"\n        >\n          Limpar filtros\n        </v-btn>\n      </div>\n      <v-data-table\n        :headers=\"headers\"\n        :items=\"items\"\n        :options.sync=\"options\"\n        :server-items-length=\"totalItems\"\n        :items-per-page=\"10\"\n        :footer-props=\"{\n          'items-per-page-options': [10, 20, 30]\n        }\"\n      >\n        <template #[`item.data`]=\"{ item }\">\n          {{ formatDateTime(item.data) }}\n        </template>\n        <template #[`item.status`]=\"{ item }\">\n          {{ formatStatusName(item.status) }}\n        </template>\n        <template #[`item.processo_descricao`]=\"{ item }\">\n          <div\n            v-for=\"(desc, index) in item.processo_descricao\"\n            :key=\"index\"\n          >\n            - {{ desc }}\n          </div>\n        </template>\n        <template #[`item.documento`]=\"{ item }\">\n          <v-tooltip top>\n            <template #activator=\"{ on, attrs }\">\n              <v-btn\n                icon\n                v-bind=\"attrs\"\n                :disabled=\"disabledButtons\"\n                v-on=\"on\"\n                @click=\"baixarArquivo(item.documento)\"\n              >\n                <v-icon>file_download</v-icon>\n              </v-btn>\n            </template>\n            <span>Baixar arquivo</span>\n          </v-tooltip>\n        </template>\n        <template #[`item.action`]=\"{ item }\">\n          <v-toolbar-items>\n            <v-tooltip bottom>\n              <template #activator=\"{ on, attrs }\">\n                <v-btn\n                  v-bind=\"attrs\"\n                  icon\n                  :disabled=\"disabledButtons\"\n                  v-on=\"on\"\n                  @click=\"openDialogStatus(item)\"       \n                >\n                  <v-icon class=\"material-icons-outlined\">\n                    edit_note\n                  </v-icon>\n                </v-btn>\n              </template>\n              <span>Editar Status</span>\n            </v-tooltip>\n            <v-tooltip bottom>\n              <template #activator=\"{ on, attrs }\">\n                <v-btn\n                  v-bind=\"attrs\"\n                  icon\n                  :disabled=\"disabledButtons\"\n                  v-on=\"on\"\n                  @click=\"editarRequerimento(item)\"     \n                >\n                  <v-icon class=\"material-icons-outlined\">\n                    visibility\n                  </v-icon>\n                </v-btn>\n              </template>\n              <span>Editar Requerimento</span>\n            </v-tooltip>\n            <!-- <v-btn\n              icon\n              @click=\"deletarRequerimento(item.id)\"\n            >\n              <v-icon class=\"material-icons-outlined\">\n                delete\n              </v-icon>\n            </v-btn> -->\n          </v-toolbar-items>\n        </template>\n      </v-data-table>\n      <ConfirmDialog ref=\"confirm\" />\n      <v-dialog\n        v-model=\"dialogStatus\"\n        persistent\n        width=\"500\"\n      >\n        <v-card>\n          <v-card-title>\n            <span class=\"text-h5\">Alterar Status do Requerimento</span>\n          </v-card-title>\n          <v-card-text>\n            <v-row>\n              <v-col\n                cols=\"12\"\n                sm=\"12\"\n              >\n                <v-autocomplete\n                  v-model=\"requerimento.status\"\n                  :items=\"status\"\n                  item-text=\"text\"\n                  item-value=\"value\"\n                  label=\"Status\"\n                  :error-messages=\"errors.status\"\n                />\n              </v-col>\n            </v-row>\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer />\n            <v-btn\n              color=\"grey\"\n              text\n              class=\"body-2 font-weight-bold\"\n              @click=\"fecharDialogStatus\"\n            >\n              Cancelar\n            </v-btn>\n            <v-btn\n              color=\"primary\"\n              class=\"body-2 font-weight-bold\"\n              text\n              @click=\"salvarDialogStatus\"\n            >\n              Salvar\n            </v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script>\nimport ConfirmDialog from '@/components/ConfirmDialog.vue'\n\nexport default {\n    name: \"RequerimentoList\",\n    components: { ConfirmDialog },\n    props: {\n        permissao: Object,\n        disabledButtons: Boolean\n    },\n    data: () => ({\n        headers: [\n            { text: \"Data\", value: \"data\" },\n            { text: \"Número\", value: \"numero\" },\n            { text: \"Descrição\", value: \"processo_descricao\", sortable: false},\n            { text: \"Placa\", value: \"placa\" },\n            { text: \"Status\", value: \"status\", sortable: false },\n            { text: \"Documento\", value: \"documento\", sortable: false },\n            { text: \"Ações\", value: \"action\" },\n        ],\n        placa:{},\n        filtro: {\n          placa: null,\n        },\n        totalItems: 0,\n        items: [],\n        options: {},\n        filtroAnterior: {\n          placa: null,\n        },\n        dialogStatus: false,\n        status: [\n          {text: 'Em andamento', value: 'em_andamento'},\n          {text: 'Cancelado', value: 'cancelado'},\n          {text: 'Finalizado', value: 'finalizado'},\n        ],\n        requerimento: {},\n        errors: {}\n    }),\n    watch: {\n        options: {\n            handler() {\n                this.getRequerimentos();\n            },\n            deep: true\n        },\n    },\n    methods: {\n        async getRequerimentos() {\n            const { sortBy, sortDesc, page, itemsPerPage } = this.options;\n           \n            let resetPage = false;\n            let ordering = sortBy[0];\n            if (sortDesc[0]) {\n              ordering = `-${ordering}`;\n            }\n\n            if (\n              this.filtro.placa !== this.filtroAnterior.placa\n            ) {\n              resetPage = true;\n              this.options.page = 1;\n              this.filtroAnterior = { ...this.filtro };\n            }\n            \n            ordering = `${sortDesc && sortDesc[0] ? '-' : ''}${sortBy}`;\n            \n            const query = {\n                permissao: this.permissao.id,\n                page: resetPage ? 1 : page,\n                page_size: itemsPerPage,\n                ordering: ordering,\n                expand: 'descricao',\n                placa: this.filtro.placa,\n            };\n            const response = await this.$api.list({\n                resource: this.$endpoints.PROCESSO,\n                query: query\n            });\n            console.log(response)\n            this.items = response.data.results;\n            this.totalItems = response.data.count;\n        },\n        baixarArquivo(arquivo) {\n          window.open(arquivo)\n        },\n        editarRequerimento(item) {\n          this.$router.push(`/requerimento/${item.id}`)\n        },\n        async deletarRequerimento(veiculoId) {\n            const res = await this.$refs.confirm.open(\"Confirmar exclusão\", \"Tem certeza que deseja excluir este registro ?\");\n            if (res) {\n                const response = this.$api.destroy({\n                    resource: this.$endpoints.PROCESSO,\n                    id: veiculoId\n                });\n                response\n                    .then(() => this.getRequerimentos())\n                    .catch(err => {\n                    this.$toast.open({\n                        message: err,\n                        type: \"error\",\n                    });\n                });\n            }\n        },\n\n        openDialogStatus(requerimento) {\n          this.requerimento = Object.assign({}, requerimento)\n          this.dialogStatus = true\n        },\n\n        fecharDialogStatus() {\n          this.dialogStatus = false\n          this.requerimento = {}\n          this.errors = {}\n        },\n\n        salvarDialogStatus() {\n          const response = this.$api.update({\n            resource: this.$endpoints.PROCESSO,\n            id: this.requerimento.id,\n            data: {\n              id: this.requerimento.id,\n              status: this.requerimento.status,\n              permissao: this.requerimento.permissao,\n              descricao: this.requerimento.descricao.id,\n              numero: this.requerimento.numero\n            }\n          })\n          response\n            .then(()=>{\n              this.$toast.open({\n                  message: 'Registro salvo com sucesso',\n                  type: 'success',\n              })\n              this.fecharDialogStatus()\n              this.getRequerimentos()\n            })\n            .catch(error=>this.errors = this.handleError(error))\n        },\n\n        formatStatusName(status) {\n          const statusMap = {\n            em_andamento: 'Em andamento',\n            cancelado: 'Cancelado',\n            finalizado: 'Finalizado'\n          };\n          return statusMap[status] || 'Status desconhecido';\n        },\n        limparFiltros() {\n          this.filtro = {\n            placa: null,\n          }\n          this.getRequerimentos()\n        },\n        transformToUppercase() {\n          this.filtro.placa = this.filtro.placa.toUpperCase();\n        },\n\n    }\n}\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}